@model IEnumerable<UvarTo.Domain.Entities.Recipes>
<head>
    <link href="@Url.Content("~/css/Search.css")" rel="stylesheet" type="text/css" />
</head>

<style>
    div.right {
        background-color: #EEEEEE;
        text-align: right;
        margin-top: 65px;
    }
    body {
        background-color: #F7F7F7;
    }

    div #main {
        padding: 0px;
        margin-bottom: 25px;
        background-color: #F7F7F7;
    }

    div.col-md-4 h3.recipe-name-link a {
        color: black;
        text-decoration: none;
    }


    div.col-md-4 h3.recipe-name-link a:hover {
        color: darkgray;
    }
    
    div.row {
        margin-bottom: 15px;
    }
    h2 {
        text-align: center;
    }
</style>

@{
    ViewData["Title"] = "Index";
}
<body>
<h2>Recipes</h2>
<div class="container">
    <div class="row no-border" id="main">
        @if (User.IsInRole("Admin") || User.IsInRole("User"))
        {
            <div class="col-md-4">
                <p>
                    <a asp-action="Create" class="btn btn-primary btn-block btn-custom">Create New</a>
                </p>
            </div>
        }

        @if (User.IsInRole("Admin") || User.IsInRole("User"))
        {
            <div class="col-md-4 offset-md-4 text-right-md">
                <p>
                    <a asp-action="UserItems" asp-controller="Recipes" class="btn btn-primary btn-block btn-custom">View My Recipes</a>
                </p>
            </div>
        }
    </div>
    <div class="row" id="main">
            <div class="col-md-12">
                <button id="toggleFilterButton" class="btn btn-primary" onclick="toggleFilterForm()">Toggle Filter</button>
                <form id="filterForm" style="display: none;">

                    <div class="form-group">
                        <label for="difficultyFilter">Difficulty:</label>
                        <select id="difficultyFilter" class="form-control">
                            <option value="">All</option>
                            @for (int i = 1; i <= 10; i++)
                            {
                                <option value="@i">@i</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="cookTimeRangeFilter">Cook time (minutes):</label>
                        <input type="range" id="cookTimeRangeFilter" min="0" max="240" step="1">
                        <span id="cookTimeRangeValue">0</span> minutes
                    </div>

                    <div class="form-group">
                        <label for="categoryFilter">Category:</label>
                        <select id="categoryFilter" class="form-control">
                            <option value="">All</option>
                            <option value="Vegan">Vegan</option>
                            <option value="Vegetariánské">Vegetarian</option>
                            <option value="Bezlepkové">Gluten free</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <button id="filtrovat" type="button" class="btn btn-primary" onclick="filterRecipes()">Filter</button>
                    </div>
                </form>
            </div>
    </div>
    
        
        <div class="col-md-12">
                    @foreach (var item in Model)
                    {
                        item.RecipeText = item.RecipeText.Length > 60 ? item.RecipeText.Substring(0, 60) + "..." : item.RecipeText;

                            <div class="row">
                                <div class="col-md-4">
                                    <img src="@item.ImageUrl" alt="Image" class="img-fluid" style="width: 400px; height: 200px;">
                                </div>

                                <div class="col-md-4">                               
                                    <h3 class="recipe-name-link">
                                        <a asp-action="Details" asp-route-id="@item.Id">@item.RecipeName</a>
                                    </h3>
                                    <p><strong>Category:</strong> @item.RecipeCategory</p>
                                    <p class="recipe-text card-text"><strong>Recipe describtion:</strong> @Html.DisplayFor(model => item.RecipeText)</p>
                                    <p><strong>Difficulty:</strong> @item.Difficulty from 10</p>
                                    <p><strong>Cook time:</strong> @item.CookTime Minut</p>
                                </div>
                                @if (User.IsInRole("Admin")){
                                <div class="col-md-4 right">
                                    <p>
                                        @using (Html.BeginForm("DeleteRecipes", "Recipes", new { id = item.Id }, FormMethod.Post))
                                        {
                                            <button class="btn btn-primary btn-block btn-custom" type="submit">Delete Recipe</button>
                                        }
                                    </p>
                                </div>
                                    }
                            </div>
                    }        
        </div> 
</div>
</body>


@section Scripts {
    <script>
        function filterRecipes() {
            var difficultyFilter = $("#difficultyFilter").val();
            var minTimeFilter = $("#cookTimeRangeFilter").attr("min");
            var maxTimeFilter = $("#cookTimeRangeFilter").val();
            var categoryFilter = $("#categoryFilter").val();

            // Display the selected cook time
            $("#cookTimeRangeValue").text(maxTimeFilter);

            $(".recipe").each(function () {
                var recipe = $(this);
                var recipeDifficulty = recipe.data("difficulty");
                var recipeCookTime = recipe.data("cook-time");
                var recipeCategory = recipe.data("category");

                // Check if the recipe matches the filter criteria
                var difficultyMatch = difficultyFilter === "" || recipeDifficulty === parseInt(difficultyFilter);
                var minTimeMatch = minTimeFilter === "" || recipeCookTime >= parseInt(minTimeFilter);
                var maxTimeMatch = maxTimeFilter === "" || recipeCookTime <= parseInt(maxTimeFilter);
                var categoryMatch = categoryFilter === "" || recipeCategory === categoryFilter;

                if (difficultyMatch && minTimeMatch && maxTimeMatch && categoryMatch) {
                    recipe.show();
                } else {
                    recipe.hide();
                }
            });
        }

        // Update the displayed value when the slider value changes
        $("#cookTimeRangeFilter").on("input", function () {
            $("#cookTimeRangeValue").text($(this).val());
        });

        function toggleFilterForm() {
            var filterForm = document.getElementById("filterForm");
            var toggleButton = document.getElementById("toggleFilterButton");

            if (filterForm.style.display === "none") {
                filterForm.style.display = "block";
                toggleButton.textContent = "Hide Filter";
            } else {
                filterForm.style.display = "none";
                toggleButton.textContent = "Show Filter";
            }
        }
    </script>
}